#include<bits/stdc++.h>

using namespace std;

#define endl        "\n"
#define ll          long long
#define READ(x)     freopen(x,"r",stdin)
#define WRITE(x)    freopen(x,"w",stdout)
#define BOOST       ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL)
#define pb          push_back
#define gcd(a, b)   __gcd(a, b)
#define lcm(a, b)   (a * b) / gcd(a, b)
#define mem(x,y)    memset(x,y,sizeof x )
#define srtv(v)     sort(v.begin(), v.end())
#define all(v)      v.begin(), v.end()
#define priority    vector<int>, greater<int>
#define uniqVec(x)  sort(all(x));x.erase(unique(all(x)),x.end())
#define For(i,j,k)  for(int i=j;i<k;i++)
#define yes         printf("YES\n")
#define no          printf("NO\n")


/// Solution ###

int main()
{
    BOOST;

    ll t,x,y,z,a,b;

    cin>>x>>y;

    bool prime[x+1];
    memset(prime, true, sizeof(prime));

    for (int p = 2; p * p <= x; p++)
    {
        if (prime[p] == true) {
            for (int i = p * p; i <= x; i += p)
                prime[i] = false;
        }
    }

    vector<ll>vec;

    for(int i=2; i<=x; i++)
    {
        if(prime[i]==true)
        {
            vec.pb(i);
        }
    }

 //   cout<<vec.size()<<endl;

    ll count=0;

  /*  for(int i=0; i<vec.size(); i++)
    {
        cout<<vec[i]<<" ";
    } */

    for(int i=2; i<vec.size(); i++)
    {
        for(int j=0; j<i; j++)
        {
            if((vec[j]+vec[j+1]+1)==vec[i])
                count++;
        }
    }

    if(count>=y)
        yes;
    else
        no;



    return 0;
}
