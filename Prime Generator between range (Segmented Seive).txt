#include<bits/stdc++.h>

using namespace std;

#define endl        "\n"
#define ll          long long
#define READ(x)     freopen(x,"r",stdin)
#define WRITE(x)    freopen(x,"w",stdout)
#define BOOST       ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL)
#define pb          push_back
#define gcd(a, b)   __gcd(a, b)
#define lcm(a, b)   (a * b) / gcd(a, b)
#define mem(x,y)    memset(x,y,sizeof x )
#define srtv(v)     sort(v.begin(), v.end())
#define all(v)      v.begin(), v.end()
#define priority    vector<int>, greater<int>
#define uniqVec(x)  sort(all(x));x.erase(unique(all(x)),x.end())
#define For(i,j,k)  for(int i=j;i<k;i++)
#define yes         printf("YES\n")
#define no          printf("NO\n")


/// Solution ###

int main()
{
    BOOST;

    ll t,x,y,z,a,b;

    cin>>t;

    for(int k=0; k<t; k++)
    {
        cin>>a>>b;

        x = sqrt(b);
        bool mark[x+1];
        mem(mark, false);
        vector<ll> primes;
        for (ll i = 2; i <= x; ++i)
        {
            if (mark[i]==false)
            {
                primes.pb(i);
                for (ll j = i * i; j <= x; j += i)
                    mark[j] = true;
            }
        }

    ///    cout<<"2nd part"<<endl;

        vector<bool> isPrime(b - a + 1, true);
        for (ll i : primes)
            for (ll j = max(i * i, (a + i - 1) / i * i); j <= b; j += i)
                isPrime[j - a] = false;
        if (a == 1)
            isPrime[0] = false;

        for (ll i=0; i<isPrime.size(); i++)
        {
            if(isPrime[i])
                cout<<i+a<<endl;
        }
        cout<<endl;
    }

    return 0;
}
