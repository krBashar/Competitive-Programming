#include<bits/stdc++.h>

using namespace std;

#define endl        "\n"
#define ll          long long
#define READ(x)     freopen(x,"r",stdin)
#define WRITE(x)    freopen(x,"w",stdout)
#define BOOST       ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL)
#define pb          push_back
#define gcd(a, b)   __gcd(a, b)
#define lcm(a, b)   (a * b) / gcd(a, b)
#define mem(x,y)    memset(x,y,sizeof x )
#define srtv(v)     sort(v.begin(), v.end())
#define all(v)      v.begin(), v.end()
#define priority    vector<int>, greater<int>
#define uniqVec(x)  sort(all(x));x.erase(unique(all(x)),x.end())
#define For(i,j,k)  for(int i=j;i<k;i++)
#define yes         printf("YES\n")
#define no          printf("NO\n")


/// Solution ###

int main()
{
    BOOST;

    ll t,x,y,z,a,b;

    cin>>t;

    bool prime[3001];
    memset(prime, true, sizeof(prime));

    for (int p = 2; p * p < 3001; p++)
    {
        if (prime[p] == true) {
            for (int i = p * p; i < 3001; i += p)
                prime[i] = false;
        }
    }

    vector<ll>vec;
    ll count=0;
    set<ll>st;

    for(ll i=2; i<3001; i++)
    {
        if(prime[i]==true)
            vec.pb(i);
    }

 //   cout<<vec.size()<<endl;

    for(ll i=1; i<=t; i++)
    {

            for (ll j = 0; j < vec.size(); j++)
            {
                    if(i%vec[j]==0)
                        {
                            st.insert(j);
                        }

                    if(st.size()>2)
                    {
                        break;
                    }
            }

            if(st.size()==2)
            {
                count++;
            }
            st.clear();
    }

    cout<<count<<endl;




    return 0;
}